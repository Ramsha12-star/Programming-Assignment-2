This function will inverse the matrix
makeCacheMatrix <- function(x = matrix()) {

m <- NULL
set <- function(y) {
    x <<- y
    m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
     setinverse = setinverse,
     getinverse = getinverse)
}
##This function will compute what was obtained by the previous one

cacheSolve <- function(x, ...) {

## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)) {
    message("getting cached data")
    return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##Testing it uses the following commands

solve(x)

##The awnser
[,1]
[1,] 0.2
